"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/borsh@1.0.0";
exports.ids = ["vendor-chunks/borsh@1.0.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/buffer.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/buffer.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.__esModule = true;\nexports.DecodeBuffer = exports.EncodeBuffer = void 0;\nvar EncodeBuffer = /** @class */ (function () {\n    function EncodeBuffer() {\n        this.offset = 0;\n        this.buffer_size = 256;\n        this.buffer = new ArrayBuffer(this.buffer_size);\n        this.view = new DataView(this.buffer);\n    }\n    EncodeBuffer.prototype.resize_if_necessary = function (needed_space) {\n        if (this.buffer_size - this.offset < needed_space) {\n            this.buffer_size = Math.max(this.buffer_size * 2, this.buffer_size + needed_space);\n            var new_buffer = new ArrayBuffer(this.buffer_size);\n            new Uint8Array(new_buffer).set(new Uint8Array(this.buffer));\n            this.buffer = new_buffer;\n            this.view = new DataView(new_buffer);\n        }\n    };\n    EncodeBuffer.prototype.get_used_buffer = function () {\n        return new Uint8Array(this.buffer).slice(0, this.offset);\n    };\n    EncodeBuffer.prototype.store_value = function (value, type) {\n        var bSize = type.substring(1);\n        var size = parseInt(bSize) / 8;\n        this.resize_if_necessary(size);\n        var toCall = type[0] === 'f' ? \"setFloat\".concat(bSize) : type[0] === 'i' ? \"setInt\".concat(bSize) : \"setUint\".concat(bSize);\n        this.view[toCall](this.offset, value, true);\n        this.offset += size;\n    };\n    EncodeBuffer.prototype.store_bytes = function (from) {\n        this.resize_if_necessary(from.length);\n        new Uint8Array(this.buffer).set(new Uint8Array(from), this.offset);\n        this.offset += from.length;\n    };\n    return EncodeBuffer;\n}());\nexports.EncodeBuffer = EncodeBuffer;\nvar DecodeBuffer = /** @class */ (function () {\n    function DecodeBuffer(buf) {\n        this.offset = 0;\n        this.buffer_size = buf.length;\n        this.buffer = new ArrayBuffer(buf.length);\n        new Uint8Array(this.buffer).set(buf);\n        this.view = new DataView(this.buffer);\n    }\n    DecodeBuffer.prototype.assert_enough_buffer = function (size) {\n        if (this.offset + size > this.buffer.byteLength) {\n            throw new Error('Error in schema, the buffer is smaller than expected');\n        }\n    };\n    DecodeBuffer.prototype.consume_value = function (type) {\n        var bSize = type.substring(1);\n        var size = parseInt(bSize) / 8;\n        this.assert_enough_buffer(size);\n        var toCall = type[0] === 'f' ? \"getFloat\".concat(bSize) : type[0] === 'i' ? \"getInt\".concat(bSize) : \"getUint\".concat(bSize);\n        var ret = this.view[toCall](this.offset, true);\n        this.offset += size;\n        return ret;\n    };\n    DecodeBuffer.prototype.consume_bytes = function (size) {\n        this.assert_enough_buffer(size);\n        var ret = this.buffer.slice(this.offset, this.offset + size);\n        this.offset += size;\n        return ret;\n    };\n    return DecodeBuffer;\n}());\nexports.DecodeBuffer = DecodeBuffer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYm9yc2hAMS4wLjAvbm9kZV9tb2R1bGVzL2JvcnNoL2xpYi9janMvYnVmZmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCO0FBQ2xCLG9CQUFvQixHQUFHLG9CQUFvQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGFja2F0aG9uLW5lYXItcmVkYWN0ZWQvLi9ub2RlX21vZHVsZXMvLnBucG0vYm9yc2hAMS4wLjAvbm9kZV9tb2R1bGVzL2JvcnNoL2xpYi9janMvYnVmZmVyLmpzPzI0YzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5EZWNvZGVCdWZmZXIgPSBleHBvcnRzLkVuY29kZUJ1ZmZlciA9IHZvaWQgMDtcbnZhciBFbmNvZGVCdWZmZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRW5jb2RlQnVmZmVyKCkge1xuICAgICAgICB0aGlzLm9mZnNldCA9IDA7XG4gICAgICAgIHRoaXMuYnVmZmVyX3NpemUgPSAyNTY7XG4gICAgICAgIHRoaXMuYnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKHRoaXMuYnVmZmVyX3NpemUpO1xuICAgICAgICB0aGlzLnZpZXcgPSBuZXcgRGF0YVZpZXcodGhpcy5idWZmZXIpO1xuICAgIH1cbiAgICBFbmNvZGVCdWZmZXIucHJvdG90eXBlLnJlc2l6ZV9pZl9uZWNlc3NhcnkgPSBmdW5jdGlvbiAobmVlZGVkX3NwYWNlKSB7XG4gICAgICAgIGlmICh0aGlzLmJ1ZmZlcl9zaXplIC0gdGhpcy5vZmZzZXQgPCBuZWVkZWRfc3BhY2UpIHtcbiAgICAgICAgICAgIHRoaXMuYnVmZmVyX3NpemUgPSBNYXRoLm1heCh0aGlzLmJ1ZmZlcl9zaXplICogMiwgdGhpcy5idWZmZXJfc2l6ZSArIG5lZWRlZF9zcGFjZSk7XG4gICAgICAgICAgICB2YXIgbmV3X2J1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcih0aGlzLmJ1ZmZlcl9zaXplKTtcbiAgICAgICAgICAgIG5ldyBVaW50OEFycmF5KG5ld19idWZmZXIpLnNldChuZXcgVWludDhBcnJheSh0aGlzLmJ1ZmZlcikpO1xuICAgICAgICAgICAgdGhpcy5idWZmZXIgPSBuZXdfYnVmZmVyO1xuICAgICAgICAgICAgdGhpcy52aWV3ID0gbmV3IERhdGFWaWV3KG5ld19idWZmZXIpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBFbmNvZGVCdWZmZXIucHJvdG90eXBlLmdldF91c2VkX2J1ZmZlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KHRoaXMuYnVmZmVyKS5zbGljZSgwLCB0aGlzLm9mZnNldCk7XG4gICAgfTtcbiAgICBFbmNvZGVCdWZmZXIucHJvdG90eXBlLnN0b3JlX3ZhbHVlID0gZnVuY3Rpb24gKHZhbHVlLCB0eXBlKSB7XG4gICAgICAgIHZhciBiU2l6ZSA9IHR5cGUuc3Vic3RyaW5nKDEpO1xuICAgICAgICB2YXIgc2l6ZSA9IHBhcnNlSW50KGJTaXplKSAvIDg7XG4gICAgICAgIHRoaXMucmVzaXplX2lmX25lY2Vzc2FyeShzaXplKTtcbiAgICAgICAgdmFyIHRvQ2FsbCA9IHR5cGVbMF0gPT09ICdmJyA/IFwic2V0RmxvYXRcIi5jb25jYXQoYlNpemUpIDogdHlwZVswXSA9PT0gJ2knID8gXCJzZXRJbnRcIi5jb25jYXQoYlNpemUpIDogXCJzZXRVaW50XCIuY29uY2F0KGJTaXplKTtcbiAgICAgICAgdGhpcy52aWV3W3RvQ2FsbF0odGhpcy5vZmZzZXQsIHZhbHVlLCB0cnVlKTtcbiAgICAgICAgdGhpcy5vZmZzZXQgKz0gc2l6ZTtcbiAgICB9O1xuICAgIEVuY29kZUJ1ZmZlci5wcm90b3R5cGUuc3RvcmVfYnl0ZXMgPSBmdW5jdGlvbiAoZnJvbSkge1xuICAgICAgICB0aGlzLnJlc2l6ZV9pZl9uZWNlc3NhcnkoZnJvbS5sZW5ndGgpO1xuICAgICAgICBuZXcgVWludDhBcnJheSh0aGlzLmJ1ZmZlcikuc2V0KG5ldyBVaW50OEFycmF5KGZyb20pLCB0aGlzLm9mZnNldCk7XG4gICAgICAgIHRoaXMub2Zmc2V0ICs9IGZyb20ubGVuZ3RoO1xuICAgIH07XG4gICAgcmV0dXJuIEVuY29kZUJ1ZmZlcjtcbn0oKSk7XG5leHBvcnRzLkVuY29kZUJ1ZmZlciA9IEVuY29kZUJ1ZmZlcjtcbnZhciBEZWNvZGVCdWZmZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRGVjb2RlQnVmZmVyKGJ1Zikge1xuICAgICAgICB0aGlzLm9mZnNldCA9IDA7XG4gICAgICAgIHRoaXMuYnVmZmVyX3NpemUgPSBidWYubGVuZ3RoO1xuICAgICAgICB0aGlzLmJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcihidWYubGVuZ3RoKTtcbiAgICAgICAgbmV3IFVpbnQ4QXJyYXkodGhpcy5idWZmZXIpLnNldChidWYpO1xuICAgICAgICB0aGlzLnZpZXcgPSBuZXcgRGF0YVZpZXcodGhpcy5idWZmZXIpO1xuICAgIH1cbiAgICBEZWNvZGVCdWZmZXIucHJvdG90eXBlLmFzc2VydF9lbm91Z2hfYnVmZmVyID0gZnVuY3Rpb24gKHNpemUpIHtcbiAgICAgICAgaWYgKHRoaXMub2Zmc2V0ICsgc2l6ZSA+IHRoaXMuYnVmZmVyLmJ5dGVMZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRXJyb3IgaW4gc2NoZW1hLCB0aGUgYnVmZmVyIGlzIHNtYWxsZXIgdGhhbiBleHBlY3RlZCcpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBEZWNvZGVCdWZmZXIucHJvdG90eXBlLmNvbnN1bWVfdmFsdWUgPSBmdW5jdGlvbiAodHlwZSkge1xuICAgICAgICB2YXIgYlNpemUgPSB0eXBlLnN1YnN0cmluZygxKTtcbiAgICAgICAgdmFyIHNpemUgPSBwYXJzZUludChiU2l6ZSkgLyA4O1xuICAgICAgICB0aGlzLmFzc2VydF9lbm91Z2hfYnVmZmVyKHNpemUpO1xuICAgICAgICB2YXIgdG9DYWxsID0gdHlwZVswXSA9PT0gJ2YnID8gXCJnZXRGbG9hdFwiLmNvbmNhdChiU2l6ZSkgOiB0eXBlWzBdID09PSAnaScgPyBcImdldEludFwiLmNvbmNhdChiU2l6ZSkgOiBcImdldFVpbnRcIi5jb25jYXQoYlNpemUpO1xuICAgICAgICB2YXIgcmV0ID0gdGhpcy52aWV3W3RvQ2FsbF0odGhpcy5vZmZzZXQsIHRydWUpO1xuICAgICAgICB0aGlzLm9mZnNldCArPSBzaXplO1xuICAgICAgICByZXR1cm4gcmV0O1xuICAgIH07XG4gICAgRGVjb2RlQnVmZmVyLnByb3RvdHlwZS5jb25zdW1lX2J5dGVzID0gZnVuY3Rpb24gKHNpemUpIHtcbiAgICAgICAgdGhpcy5hc3NlcnRfZW5vdWdoX2J1ZmZlcihzaXplKTtcbiAgICAgICAgdmFyIHJldCA9IHRoaXMuYnVmZmVyLnNsaWNlKHRoaXMub2Zmc2V0LCB0aGlzLm9mZnNldCArIHNpemUpO1xuICAgICAgICB0aGlzLm9mZnNldCArPSBzaXplO1xuICAgICAgICByZXR1cm4gcmV0O1xuICAgIH07XG4gICAgcmV0dXJuIERlY29kZUJ1ZmZlcjtcbn0oKSk7XG5leHBvcnRzLkRlY29kZUJ1ZmZlciA9IERlY29kZUJ1ZmZlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/buffer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/deserialize.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/deserialize.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports.BorshDeserializer = void 0;\nvar types_js_1 = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/types.js\");\nvar buffer_js_1 = __webpack_require__(/*! ./buffer.js */ \"(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/buffer.js\");\nvar BorshDeserializer = /** @class */ (function () {\n    function BorshDeserializer(bufferArray) {\n        this.buffer = new buffer_js_1.DecodeBuffer(bufferArray);\n    }\n    BorshDeserializer.prototype.decode = function (schema) {\n        return this.decode_value(schema);\n    };\n    BorshDeserializer.prototype.decode_value = function (schema) {\n        if (typeof schema === 'string') {\n            if (types_js_1.integers.includes(schema))\n                return this.decode_integer(schema);\n            if (schema === 'string')\n                return this.decode_string();\n            if (schema === 'bool')\n                return this.decode_boolean();\n        }\n        if (typeof schema === 'object') {\n            if ('option' in schema)\n                return this.decode_option(schema);\n            if ('enum' in schema)\n                return this.decode_enum(schema);\n            if ('array' in schema)\n                return this.decode_array(schema);\n            if ('set' in schema)\n                return this.decode_set(schema);\n            if ('map' in schema)\n                return this.decode_map(schema);\n            if ('struct' in schema)\n                return this.decode_struct(schema);\n        }\n        throw new Error(\"Unsupported type: \".concat(schema));\n    };\n    BorshDeserializer.prototype.decode_integer = function (schema) {\n        var size = parseInt(schema.substring(1));\n        if (size <= 32 || schema == 'f64') {\n            return this.buffer.consume_value(schema);\n        }\n        return this.decode_bigint(size, schema.startsWith('i'));\n    };\n    BorshDeserializer.prototype.decode_bigint = function (size, signed) {\n        if (signed === void 0) { signed = false; }\n        var buffer_len = size / 8;\n        var buffer = new Uint8Array(this.buffer.consume_bytes(buffer_len));\n        var bits = buffer.reduceRight(function (r, x) { return r + x.toString(16).padStart(2, '0'); }, '');\n        if (signed && buffer[buffer_len - 1]) {\n            return BigInt.asIntN(size, BigInt(\"0x\".concat(bits)));\n        }\n        return BigInt(\"0x\".concat(bits));\n    };\n    BorshDeserializer.prototype.decode_string = function () {\n        var len = this.decode_integer('u32');\n        var buffer = new Uint8Array(this.buffer.consume_bytes(len));\n        return String.fromCharCode.apply(null, buffer);\n    };\n    BorshDeserializer.prototype.decode_boolean = function () {\n        return this.buffer.consume_value('u8') > 0;\n    };\n    BorshDeserializer.prototype.decode_option = function (schema) {\n        var option = this.buffer.consume_value('u8');\n        if (option === 1) {\n            return this.decode_value(schema.option);\n        }\n        if (option !== 0) {\n            throw new Error(\"Invalid option \".concat(option));\n        }\n        return null;\n    };\n    BorshDeserializer.prototype.decode_enum = function (schema) {\n        var _a;\n        var valueIndex = this.buffer.consume_value('u8');\n        if (valueIndex > schema[\"enum\"].length) {\n            throw new Error(\"Enum option \".concat(valueIndex, \" is not available\"));\n        }\n        var struct = schema[\"enum\"][valueIndex].struct;\n        var key = Object.keys(struct)[0];\n        return _a = {}, _a[key] = this.decode_value(struct[key]), _a;\n    };\n    BorshDeserializer.prototype.decode_array = function (schema) {\n        var result = [];\n        var len = schema.array.len ? schema.array.len : this.decode_integer('u32');\n        for (var i = 0; i < len; ++i) {\n            result.push(this.decode_value(schema.array.type));\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_set = function (schema) {\n        var len = this.decode_integer('u32');\n        var result = new Set();\n        for (var i = 0; i < len; ++i) {\n            result.add(this.decode_value(schema.set));\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_map = function (schema) {\n        var len = this.decode_integer('u32');\n        var result = new Map();\n        for (var i = 0; i < len; ++i) {\n            var key = this.decode_value(schema.map.key);\n            var value = this.decode_value(schema.map.value);\n            result.set(key, value);\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_struct = function (schema) {\n        var result = {};\n        for (var key in schema.struct) {\n            result[key] = this.decode_value(schema.struct[key]);\n        }\n        return result;\n    };\n    return BorshDeserializer;\n}());\nexports.BorshDeserializer = BorshDeserializer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYm9yc2hAMS4wLjAvbm9kZV9tb2R1bGVzL2JvcnNoL2xpYi9janMvZGVzZXJpYWxpemUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0I7QUFDbEIseUJBQXlCO0FBQ3pCLGlCQUFpQixtQkFBTyxDQUFDLDhGQUFZO0FBQ3JDLGtCQUFrQixtQkFBTyxDQUFDLGdHQUFhO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQSx3REFBd0QsNkNBQTZDO0FBQ3JHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFNBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsU0FBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixTQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QseUJBQXlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGFja2F0aG9uLW5lYXItcmVkYWN0ZWQvLi9ub2RlX21vZHVsZXMvLnBucG0vYm9yc2hAMS4wLjAvbm9kZV9tb2R1bGVzL2JvcnNoL2xpYi9janMvZGVzZXJpYWxpemUuanM/YTQ1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLkJvcnNoRGVzZXJpYWxpemVyID0gdm9pZCAwO1xudmFyIHR5cGVzX2pzXzEgPSByZXF1aXJlKFwiLi90eXBlcy5qc1wiKTtcbnZhciBidWZmZXJfanNfMSA9IHJlcXVpcmUoXCIuL2J1ZmZlci5qc1wiKTtcbnZhciBCb3JzaERlc2VyaWFsaXplciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBCb3JzaERlc2VyaWFsaXplcihidWZmZXJBcnJheSkge1xuICAgICAgICB0aGlzLmJ1ZmZlciA9IG5ldyBidWZmZXJfanNfMS5EZWNvZGVCdWZmZXIoYnVmZmVyQXJyYXkpO1xuICAgIH1cbiAgICBCb3JzaERlc2VyaWFsaXplci5wcm90b3R5cGUuZGVjb2RlID0gZnVuY3Rpb24gKHNjaGVtYSkge1xuICAgICAgICByZXR1cm4gdGhpcy5kZWNvZGVfdmFsdWUoc2NoZW1hKTtcbiAgICB9O1xuICAgIEJvcnNoRGVzZXJpYWxpemVyLnByb3RvdHlwZS5kZWNvZGVfdmFsdWUgPSBmdW5jdGlvbiAoc2NoZW1hKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2NoZW1hID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgaWYgKHR5cGVzX2pzXzEuaW50ZWdlcnMuaW5jbHVkZXMoc2NoZW1hKSlcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kZWNvZGVfaW50ZWdlcihzY2hlbWEpO1xuICAgICAgICAgICAgaWYgKHNjaGVtYSA9PT0gJ3N0cmluZycpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGVjb2RlX3N0cmluZygpO1xuICAgICAgICAgICAgaWYgKHNjaGVtYSA9PT0gJ2Jvb2wnKVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmRlY29kZV9ib29sZWFuKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBzY2hlbWEgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICBpZiAoJ29wdGlvbicgaW4gc2NoZW1hKVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmRlY29kZV9vcHRpb24oc2NoZW1hKTtcbiAgICAgICAgICAgIGlmICgnZW51bScgaW4gc2NoZW1hKVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmRlY29kZV9lbnVtKHNjaGVtYSk7XG4gICAgICAgICAgICBpZiAoJ2FycmF5JyBpbiBzY2hlbWEpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGVjb2RlX2FycmF5KHNjaGVtYSk7XG4gICAgICAgICAgICBpZiAoJ3NldCcgaW4gc2NoZW1hKVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmRlY29kZV9zZXQoc2NoZW1hKTtcbiAgICAgICAgICAgIGlmICgnbWFwJyBpbiBzY2hlbWEpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGVjb2RlX21hcChzY2hlbWEpO1xuICAgICAgICAgICAgaWYgKCdzdHJ1Y3QnIGluIHNjaGVtYSlcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kZWNvZGVfc3RydWN0KHNjaGVtYSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgdHlwZTogXCIuY29uY2F0KHNjaGVtYSkpO1xuICAgIH07XG4gICAgQm9yc2hEZXNlcmlhbGl6ZXIucHJvdG90eXBlLmRlY29kZV9pbnRlZ2VyID0gZnVuY3Rpb24gKHNjaGVtYSkge1xuICAgICAgICB2YXIgc2l6ZSA9IHBhcnNlSW50KHNjaGVtYS5zdWJzdHJpbmcoMSkpO1xuICAgICAgICBpZiAoc2l6ZSA8PSAzMiB8fCBzY2hlbWEgPT0gJ2Y2NCcpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmJ1ZmZlci5jb25zdW1lX3ZhbHVlKHNjaGVtYSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuZGVjb2RlX2JpZ2ludChzaXplLCBzY2hlbWEuc3RhcnRzV2l0aCgnaScpKTtcbiAgICB9O1xuICAgIEJvcnNoRGVzZXJpYWxpemVyLnByb3RvdHlwZS5kZWNvZGVfYmlnaW50ID0gZnVuY3Rpb24gKHNpemUsIHNpZ25lZCkge1xuICAgICAgICBpZiAoc2lnbmVkID09PSB2b2lkIDApIHsgc2lnbmVkID0gZmFsc2U7IH1cbiAgICAgICAgdmFyIGJ1ZmZlcl9sZW4gPSBzaXplIC8gODtcbiAgICAgICAgdmFyIGJ1ZmZlciA9IG5ldyBVaW50OEFycmF5KHRoaXMuYnVmZmVyLmNvbnN1bWVfYnl0ZXMoYnVmZmVyX2xlbikpO1xuICAgICAgICB2YXIgYml0cyA9IGJ1ZmZlci5yZWR1Y2VSaWdodChmdW5jdGlvbiAociwgeCkgeyByZXR1cm4gciArIHgudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsICcwJyk7IH0sICcnKTtcbiAgICAgICAgaWYgKHNpZ25lZCAmJiBidWZmZXJbYnVmZmVyX2xlbiAtIDFdKSB7XG4gICAgICAgICAgICByZXR1cm4gQmlnSW50LmFzSW50TihzaXplLCBCaWdJbnQoXCIweFwiLmNvbmNhdChiaXRzKSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBCaWdJbnQoXCIweFwiLmNvbmNhdChiaXRzKSk7XG4gICAgfTtcbiAgICBCb3JzaERlc2VyaWFsaXplci5wcm90b3R5cGUuZGVjb2RlX3N0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGxlbiA9IHRoaXMuZGVjb2RlX2ludGVnZXIoJ3UzMicpO1xuICAgICAgICB2YXIgYnVmZmVyID0gbmV3IFVpbnQ4QXJyYXkodGhpcy5idWZmZXIuY29uc3VtZV9ieXRlcyhsZW4pKTtcbiAgICAgICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgYnVmZmVyKTtcbiAgICB9O1xuICAgIEJvcnNoRGVzZXJpYWxpemVyLnByb3RvdHlwZS5kZWNvZGVfYm9vbGVhbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYnVmZmVyLmNvbnN1bWVfdmFsdWUoJ3U4JykgPiAwO1xuICAgIH07XG4gICAgQm9yc2hEZXNlcmlhbGl6ZXIucHJvdG90eXBlLmRlY29kZV9vcHRpb24gPSBmdW5jdGlvbiAoc2NoZW1hKSB7XG4gICAgICAgIHZhciBvcHRpb24gPSB0aGlzLmJ1ZmZlci5jb25zdW1lX3ZhbHVlKCd1OCcpO1xuICAgICAgICBpZiAob3B0aW9uID09PSAxKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5kZWNvZGVfdmFsdWUoc2NoZW1hLm9wdGlvbik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbiAhPT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBvcHRpb24gXCIuY29uY2F0KG9wdGlvbikpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgQm9yc2hEZXNlcmlhbGl6ZXIucHJvdG90eXBlLmRlY29kZV9lbnVtID0gZnVuY3Rpb24gKHNjaGVtYSkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHZhciB2YWx1ZUluZGV4ID0gdGhpcy5idWZmZXIuY29uc3VtZV92YWx1ZSgndTgnKTtcbiAgICAgICAgaWYgKHZhbHVlSW5kZXggPiBzY2hlbWFbXCJlbnVtXCJdLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRW51bSBvcHRpb24gXCIuY29uY2F0KHZhbHVlSW5kZXgsIFwiIGlzIG5vdCBhdmFpbGFibGVcIikpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBzdHJ1Y3QgPSBzY2hlbWFbXCJlbnVtXCJdW3ZhbHVlSW5kZXhdLnN0cnVjdDtcbiAgICAgICAgdmFyIGtleSA9IE9iamVjdC5rZXlzKHN0cnVjdClbMF07XG4gICAgICAgIHJldHVybiBfYSA9IHt9LCBfYVtrZXldID0gdGhpcy5kZWNvZGVfdmFsdWUoc3RydWN0W2tleV0pLCBfYTtcbiAgICB9O1xuICAgIEJvcnNoRGVzZXJpYWxpemVyLnByb3RvdHlwZS5kZWNvZGVfYXJyYXkgPSBmdW5jdGlvbiAoc2NoZW1hKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICAgICAgdmFyIGxlbiA9IHNjaGVtYS5hcnJheS5sZW4gPyBzY2hlbWEuYXJyYXkubGVuIDogdGhpcy5kZWNvZGVfaW50ZWdlcigndTMyJyk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKHRoaXMuZGVjb2RlX3ZhbHVlKHNjaGVtYS5hcnJheS50eXBlKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICAgIEJvcnNoRGVzZXJpYWxpemVyLnByb3RvdHlwZS5kZWNvZGVfc2V0ID0gZnVuY3Rpb24gKHNjaGVtYSkge1xuICAgICAgICB2YXIgbGVuID0gdGhpcy5kZWNvZGVfaW50ZWdlcigndTMyJyk7XG4gICAgICAgIHZhciByZXN1bHQgPSBuZXcgU2V0KCk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgICAgICAgIHJlc3VsdC5hZGQodGhpcy5kZWNvZGVfdmFsdWUoc2NoZW1hLnNldCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgICBCb3JzaERlc2VyaWFsaXplci5wcm90b3R5cGUuZGVjb2RlX21hcCA9IGZ1bmN0aW9uIChzY2hlbWEpIHtcbiAgICAgICAgdmFyIGxlbiA9IHRoaXMuZGVjb2RlX2ludGVnZXIoJ3UzMicpO1xuICAgICAgICB2YXIgcmVzdWx0ID0gbmV3IE1hcCgpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0gdGhpcy5kZWNvZGVfdmFsdWUoc2NoZW1hLm1hcC5rZXkpO1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gdGhpcy5kZWNvZGVfdmFsdWUoc2NoZW1hLm1hcC52YWx1ZSk7XG4gICAgICAgICAgICByZXN1bHQuc2V0KGtleSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgICBCb3JzaERlc2VyaWFsaXplci5wcm90b3R5cGUuZGVjb2RlX3N0cnVjdCA9IGZ1bmN0aW9uIChzY2hlbWEpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgICAgICBmb3IgKHZhciBrZXkgaW4gc2NoZW1hLnN0cnVjdCkge1xuICAgICAgICAgICAgcmVzdWx0W2tleV0gPSB0aGlzLmRlY29kZV92YWx1ZShzY2hlbWEuc3RydWN0W2tleV0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgICByZXR1cm4gQm9yc2hEZXNlcmlhbGl6ZXI7XG59KCkpO1xuZXhwb3J0cy5Cb3JzaERlc2VyaWFsaXplciA9IEJvcnNoRGVzZXJpYWxpemVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/deserialize.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/index.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nexports.__esModule = true;\nexports.deserialize = exports.serialize = void 0;\nvar serialize_js_1 = __webpack_require__(/*! ./serialize.js */ \"(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/serialize.js\");\nvar deserialize_js_1 = __webpack_require__(/*! ./deserialize.js */ \"(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/deserialize.js\");\nvar utils = __importStar(__webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/utils.js\"));\nfunction serialize(schema, value, validate) {\n    if (validate === void 0) { validate = true; }\n    if (validate)\n        utils.validate_schema(schema);\n    var serializer = new serialize_js_1.BorshSerializer(validate);\n    return serializer.encode(value, schema);\n}\nexports.serialize = serialize;\nfunction deserialize(schema, buffer, validate) {\n    if (validate === void 0) { validate = true; }\n    if (validate)\n        utils.validate_schema(schema);\n    var deserializer = new deserialize_js_1.BorshDeserializer(buffer);\n    return deserializer.decode(schema);\n}\nexports.deserialize = deserialize;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYm9yc2hAMS4wLjAvbm9kZV9tb2R1bGVzL2JvcnNoL2xpYi9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCLG1CQUFtQixHQUFHLGlCQUFpQjtBQUN2QyxxQkFBcUIsbUJBQU8sQ0FBQyxzR0FBZ0I7QUFDN0MsdUJBQXVCLG1CQUFPLENBQUMsMEdBQWtCO0FBQ2pELHlCQUF5QixtQkFBTyxDQUFDLDhGQUFZO0FBQzdDO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hhY2thdGhvbi1uZWFyLXJlZGFjdGVkLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2JvcnNoQDEuMC4wL25vZGVfbW9kdWxlcy9ib3JzaC9saWIvY2pzL2luZGV4LmpzP2NhOTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlc2VyaWFsaXplID0gZXhwb3J0cy5zZXJpYWxpemUgPSB2b2lkIDA7XG52YXIgc2VyaWFsaXplX2pzXzEgPSByZXF1aXJlKFwiLi9zZXJpYWxpemUuanNcIik7XG52YXIgZGVzZXJpYWxpemVfanNfMSA9IHJlcXVpcmUoXCIuL2Rlc2VyaWFsaXplLmpzXCIpO1xudmFyIHV0aWxzID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpKTtcbmZ1bmN0aW9uIHNlcmlhbGl6ZShzY2hlbWEsIHZhbHVlLCB2YWxpZGF0ZSkge1xuICAgIGlmICh2YWxpZGF0ZSA9PT0gdm9pZCAwKSB7IHZhbGlkYXRlID0gdHJ1ZTsgfVxuICAgIGlmICh2YWxpZGF0ZSlcbiAgICAgICAgdXRpbHMudmFsaWRhdGVfc2NoZW1hKHNjaGVtYSk7XG4gICAgdmFyIHNlcmlhbGl6ZXIgPSBuZXcgc2VyaWFsaXplX2pzXzEuQm9yc2hTZXJpYWxpemVyKHZhbGlkYXRlKTtcbiAgICByZXR1cm4gc2VyaWFsaXplci5lbmNvZGUodmFsdWUsIHNjaGVtYSk7XG59XG5leHBvcnRzLnNlcmlhbGl6ZSA9IHNlcmlhbGl6ZTtcbmZ1bmN0aW9uIGRlc2VyaWFsaXplKHNjaGVtYSwgYnVmZmVyLCB2YWxpZGF0ZSkge1xuICAgIGlmICh2YWxpZGF0ZSA9PT0gdm9pZCAwKSB7IHZhbGlkYXRlID0gdHJ1ZTsgfVxuICAgIGlmICh2YWxpZGF0ZSlcbiAgICAgICAgdXRpbHMudmFsaWRhdGVfc2NoZW1hKHNjaGVtYSk7XG4gICAgdmFyIGRlc2VyaWFsaXplciA9IG5ldyBkZXNlcmlhbGl6ZV9qc18xLkJvcnNoRGVzZXJpYWxpemVyKGJ1ZmZlcik7XG4gICAgcmV0dXJuIGRlc2VyaWFsaXplci5kZWNvZGUoc2NoZW1hKTtcbn1cbmV4cG9ydHMuZGVzZXJpYWxpemUgPSBkZXNlcmlhbGl6ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/serialize.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/serialize.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nexports.__esModule = true;\nexports.BorshSerializer = void 0;\nvar types_js_1 = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/types.js\");\nvar buffer_js_1 = __webpack_require__(/*! ./buffer.js */ \"(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/buffer.js\");\nvar utils = __importStar(__webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/utils.js\"));\nvar BorshSerializer = /** @class */ (function () {\n    function BorshSerializer(checkTypes) {\n        this.encoded = new buffer_js_1.EncodeBuffer();\n        this.fieldPath = ['value'];\n        this.checkTypes = checkTypes;\n    }\n    BorshSerializer.prototype.encode = function (value, schema) {\n        this.encode_value(value, schema);\n        return this.encoded.get_used_buffer();\n    };\n    BorshSerializer.prototype.encode_value = function (value, schema) {\n        if (typeof schema === 'string') {\n            if (types_js_1.integers.includes(schema))\n                return this.encode_integer(value, schema);\n            if (schema === 'string')\n                return this.encode_string(value);\n            if (schema === 'bool')\n                return this.encode_boolean(value);\n        }\n        if (typeof schema === 'object') {\n            if ('option' in schema)\n                return this.encode_option(value, schema);\n            if ('enum' in schema)\n                return this.encode_enum(value, schema);\n            if ('array' in schema)\n                return this.encode_array(value, schema);\n            if ('set' in schema)\n                return this.encode_set(value, schema);\n            if ('map' in schema)\n                return this.encode_map(value, schema);\n            if ('struct' in schema)\n                return this.encode_struct(value, schema);\n        }\n    };\n    BorshSerializer.prototype.encode_integer = function (value, schema) {\n        var size = parseInt(schema.substring(1));\n        if (size <= 32 || schema == 'f64') {\n            this.checkTypes && utils.expect_type(value, 'number', this.fieldPath);\n            this.encoded.store_value(value, schema);\n        }\n        else {\n            this.checkTypes && utils.expect_bigint(value, this.fieldPath);\n            this.encode_bigint(BigInt(value), size);\n        }\n    };\n    BorshSerializer.prototype.encode_bigint = function (value, size) {\n        var buffer_len = size / 8;\n        var buffer = new Uint8Array(buffer_len);\n        for (var i = 0; i < buffer_len; i++) {\n            buffer[i] = Number(value & BigInt(0xff));\n            value = value >> BigInt(8);\n        }\n        this.encoded.store_bytes(new Uint8Array(buffer));\n    };\n    BorshSerializer.prototype.encode_string = function (value) {\n        this.checkTypes && utils.expect_type(value, 'string', this.fieldPath);\n        var _value = value;\n        // 4 bytes for length\n        this.encoded.store_value(_value.length, 'u32');\n        // string bytes\n        for (var i = 0; i < _value.length; i++) {\n            this.encoded.store_value(_value.charCodeAt(i), 'u8');\n        }\n    };\n    BorshSerializer.prototype.encode_boolean = function (value) {\n        this.checkTypes && utils.expect_type(value, 'boolean', this.fieldPath);\n        this.encoded.store_value(value ? 1 : 0, 'u8');\n    };\n    BorshSerializer.prototype.encode_option = function (value, schema) {\n        if (value === null || value === undefined) {\n            this.encoded.store_value(0, 'u8');\n        }\n        else {\n            this.encoded.store_value(1, 'u8');\n            this.encode_value(value, schema.option);\n        }\n    };\n    BorshSerializer.prototype.encode_enum = function (value, schema) {\n        this.checkTypes && utils.expect_enum(value, this.fieldPath);\n        var valueKey = Object.keys(value)[0];\n        for (var i = 0; i < schema[\"enum\"].length; i++) {\n            var valueSchema = schema[\"enum\"][i];\n            if (valueKey === Object.keys(valueSchema.struct)[0]) {\n                this.encoded.store_value(i, 'u8');\n                return this.encode_struct(value, valueSchema);\n            }\n        }\n        throw new Error(\"Enum key (\".concat(valueKey, \") not found in enum schema: \").concat(JSON.stringify(schema), \" at \").concat(this.fieldPath.join('.')));\n    };\n    BorshSerializer.prototype.encode_array = function (value, schema) {\n        if (utils.isArrayLike(value))\n            return this.encode_arraylike(value, schema);\n        if (value instanceof ArrayBuffer)\n            return this.encode_buffer(value, schema);\n        throw new Error(\"Expected Array-like not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(this.fieldPath.join('.')));\n    };\n    BorshSerializer.prototype.encode_arraylike = function (value, schema) {\n        if (schema.array.len) {\n            utils.expect_same_size(value.length, schema.array.len, this.fieldPath);\n        }\n        else {\n            // 4 bytes for length\n            this.encoded.store_value(value.length, 'u32');\n        }\n        // array values\n        for (var i = 0; i < value.length; i++) {\n            this.encode_value(value[i], schema.array.type);\n        }\n    };\n    BorshSerializer.prototype.encode_buffer = function (value, schema) {\n        if (schema.array.len) {\n            utils.expect_same_size(value.byteLength, schema.array.len, this.fieldPath);\n        }\n        else {\n            // 4 bytes for length\n            this.encoded.store_value(value.byteLength, 'u32');\n        }\n        // array values\n        this.encoded.store_bytes(new Uint8Array(value));\n    };\n    BorshSerializer.prototype.encode_set = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        var isSet = value instanceof Set;\n        var values = isSet ? Array.from(value.values()) : Object.values(value);\n        // 4 bytes for length\n        this.encoded.store_value(values.length, 'u32');\n        // set values\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var value_1 = values_1[_i];\n            this.encode_value(value_1, schema.set);\n        }\n    };\n    BorshSerializer.prototype.encode_map = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        var isMap = value instanceof Map;\n        var keys = isMap ? Array.from(value.keys()) : Object.keys(value);\n        // 4 bytes for length\n        this.encoded.store_value(keys.length, 'u32');\n        // store key/values\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            this.encode_value(key, schema.map.key);\n            this.encode_value(isMap ? value.get(key) : value[key], schema.map.value);\n        }\n    };\n    BorshSerializer.prototype.encode_struct = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        for (var _i = 0, _a = Object.keys(schema.struct); _i < _a.length; _i++) {\n            var key = _a[_i];\n            this.fieldPath.push(key);\n            this.encode_value(value[key], schema.struct[key]);\n            this.fieldPath.pop();\n        }\n    };\n    return BorshSerializer;\n}());\nexports.BorshSerializer = BorshSerializer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/serialize.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/types.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/types.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.__esModule = true;\nexports.integers = void 0;\nexports.integers = ['u8', 'u16', 'u32', 'u64', 'u128', 'i8', 'i16', 'i32', 'i64', 'i128', 'f32', 'f64'];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYm9yc2hAMS4wLjAvbm9kZV9tb2R1bGVzL2JvcnNoL2xpYi9janMvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0I7QUFDbEIsZ0JBQWdCO0FBQ2hCLGdCQUFnQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hhY2thdGhvbi1uZWFyLXJlZGFjdGVkLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2JvcnNoQDEuMC4wL25vZGVfbW9kdWxlcy9ib3JzaC9saWIvY2pzL3R5cGVzLmpzPzAwOGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5pbnRlZ2VycyA9IHZvaWQgMDtcbmV4cG9ydHMuaW50ZWdlcnMgPSBbJ3U4JywgJ3UxNicsICd1MzInLCAndTY0JywgJ3UxMjgnLCAnaTgnLCAnaTE2JywgJ2kzMicsICdpNjQnLCAnaTEyOCcsICdmMzInLCAnZjY0J107XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/utils.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/utils.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nexports.validate_schema = exports.ErrorSchema = exports.expect_enum = exports.expect_same_size = exports.expect_bigint = exports.expect_type = exports.isArrayLike = void 0;\nvar types_js_1 = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/types.js\");\nfunction isArrayLike(value) {\n    // source: https://stackoverflow.com/questions/24048547/checking-if-an-object-is-array-like\n    return (Array.isArray(value) ||\n        (!!value &&\n            typeof value === 'object' &&\n            'length' in value &&\n            typeof (value.length) === 'number' &&\n            (value.length === 0 ||\n                (value.length > 0 &&\n                    (value.length - 1) in value))));\n}\nexports.isArrayLike = isArrayLike;\nfunction expect_type(value, type, fieldPath) {\n    if (typeof (value) !== type) {\n        throw new Error(\"Expected \".concat(type, \" not \").concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_type = expect_type;\nfunction expect_bigint(value, fieldPath) {\n    var basicType = ['number', 'string', 'bigint', 'boolean'].includes(typeof (value));\n    var strObject = typeof (value) === 'object' && value !== null && 'toString' in value;\n    if (!basicType && !strObject) {\n        throw new Error(\"Expected bigint, number, boolean or string not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_bigint = expect_bigint;\nfunction expect_same_size(length, expected, fieldPath) {\n    if (length !== expected) {\n        throw new Error(\"Array length \".concat(length, \" does not match schema length \").concat(expected, \" at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_same_size = expect_same_size;\nfunction expect_enum(value, fieldPath) {\n    if (typeof (value) !== 'object' || value === null) {\n        throw new Error(\"Expected object not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_enum = expect_enum;\n// Validate Schema\nvar VALID_STRING_TYPES = types_js_1.integers.concat(['bool', 'string']);\nvar VALID_OBJECT_KEYS = ['option', 'enum', 'array', 'set', 'map', 'struct'];\nvar ErrorSchema = /** @class */ (function (_super) {\n    __extends(ErrorSchema, _super);\n    function ErrorSchema(schema, expected) {\n        var message = \"Invalid schema: \".concat(JSON.stringify(schema), \" expected \").concat(expected);\n        return _super.call(this, message) || this;\n    }\n    return ErrorSchema;\n}(Error));\nexports.ErrorSchema = ErrorSchema;\nfunction validate_schema(schema) {\n    if (typeof (schema) === 'string' && VALID_STRING_TYPES.includes(schema)) {\n        return;\n    }\n    if (schema && typeof (schema) === 'object') {\n        var keys = Object.keys(schema);\n        if (keys.length === 1 && VALID_OBJECT_KEYS.includes(keys[0])) {\n            var key = keys[0];\n            if (key === 'option')\n                return validate_schema(schema[key]);\n            if (key === 'enum')\n                return validate_enum_schema(schema[key]);\n            if (key === 'array')\n                return validate_array_schema(schema[key]);\n            if (key === 'set')\n                return validate_schema(schema[key]);\n            if (key === 'map')\n                return validate_map_schema(schema[key]);\n            if (key === 'struct')\n                return validate_struct_schema(schema[key]);\n        }\n    }\n    throw new ErrorSchema(schema, VALID_OBJECT_KEYS.join(', ') + ' or ' + VALID_STRING_TYPES.join(', '));\n}\nexports.validate_schema = validate_schema;\nfunction validate_enum_schema(schema) {\n    if (!Array.isArray(schema))\n        throw new ErrorSchema(schema, 'Array');\n    for (var _i = 0, schema_1 = schema; _i < schema_1.length; _i++) {\n        var sch = schema_1[_i];\n        if (typeof sch !== 'object' || !('struct' in sch)) {\n            throw new Error('Missing \"struct\" key in enum schema');\n        }\n        if (typeof sch.struct !== 'object' || Object.keys(sch.struct).length !== 1) {\n            throw new Error('The \"struct\" in each enum must have a single key');\n        }\n        validate_schema({ struct: sch.struct });\n    }\n}\nfunction validate_array_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, '{ type, len? }');\n    if (schema.len && typeof schema.len !== 'number') {\n        throw new Error(\"Invalid schema: \".concat(schema));\n    }\n    if ('type' in schema)\n        return validate_schema(schema.type);\n    throw new ErrorSchema(schema, '{ type, len? }');\n}\nfunction validate_map_schema(schema) {\n    if (typeof schema === 'object' && 'key' in schema && 'value' in schema) {\n        validate_schema(schema.key);\n        validate_schema(schema.value);\n    }\n    else {\n        throw new ErrorSchema(schema, '{ key, value }');\n    }\n}\nfunction validate_struct_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, 'object');\n    for (var key in schema) {\n        validate_schema(schema[key]);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/utils.js\n");

/***/ })

};
;