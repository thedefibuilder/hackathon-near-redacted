"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@near-js+signers@0.2.1";
exports.ids = ["vendor-chunks/@near-js+signers@0.2.1"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@near-js+signers@0.2.1/node_modules/@near-js/signers/lib/commonjs/in_memory_signer.cjs":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@near-js+signers@0.2.1/node_modules/@near-js/signers/lib/commonjs/in_memory_signer.cjs ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InMemorySigner = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/.pnpm/@near-js+crypto@1.4.1/node_modules/@near-js/crypto/lib/commonjs/index.cjs\");\nconst keystores_1 = __webpack_require__(/*! @near-js/keystores */ \"(ssr)/./node_modules/.pnpm/@near-js+keystores@0.2.1/node_modules/@near-js/keystores/lib/commonjs/index.cjs\");\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/sha256.js\");\nconst signer_1 = __webpack_require__(/*! ./signer.cjs */ \"(ssr)/./node_modules/.pnpm/@near-js+signers@0.2.1/node_modules/@near-js/signers/lib/commonjs/signer.cjs\");\n/**\n * Signs using in memory key store.\n */\nclass InMemorySigner extends signer_1.Signer {\n    keyStore;\n    constructor(keyStore) {\n        super();\n        this.keyStore = keyStore;\n    }\n    /**\n     * Creates a single account Signer instance with account, network and keyPair provided.\n     *\n     * Intended to be useful for temporary keys (e.g. claiming a Linkdrop).\n     *\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account to assign the key pair to\n     * @param keyPair The keyPair to use for signing\n     */\n    static async fromKeyPair(networkId, accountId, keyPair) {\n        const keyStore = new keystores_1.InMemoryKeyStore();\n        await keyStore.setKey(networkId, accountId, keyPair);\n        return new InMemorySigner(keyStore);\n    }\n    /**\n     * Creates a public key for the account given\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>}\n     */\n    async createKey(accountId, networkId, keyType) {\n        const keyPair = keyType === crypto_1.KeyType.SECP256K1 ? crypto_1.KeyPair.fromRandom('secp256k1') : crypto_1.KeyPair.fromRandom('ed25519');\n        await this.keyStore.setKey(networkId, accountId, keyPair);\n        return keyPair.getPublicKey();\n    }\n    /**\n     * Gets the existing public key for a given account\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>} Returns the public key or null if not found\n     */\n    async getPublicKey(accountId, networkId) {\n        const keyPair = await this.keyStore.getKey(networkId, accountId);\n        if (keyPair === null) {\n            return null;\n        }\n        return keyPair.getPublicKey();\n    }\n    /**\n     * @param message A message to be signed, typically a serialized transaction\n     * @param accountId the NEAR account signing the message\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<Signature>}\n     */\n    async signMessage(message, accountId, networkId) {\n        const hash = new Uint8Array((0, sha256_1.sha256)(message));\n        if (!accountId) {\n            throw new Error('InMemorySigner requires provided account id');\n        }\n        const keyPair = await this.keyStore.getKey(networkId, accountId);\n        if (keyPair === null) {\n            throw new Error(`Key for ${accountId} not found in ${networkId}`);\n        }\n        return keyPair.sign(hash);\n    }\n    toString() {\n        return `InMemorySigner(${this.keyStore})`;\n    }\n}\nexports.InMemorySigner = InMemorySigner;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG5lYXItanMrc2lnbmVyc0AwLjIuMS9ub2RlX21vZHVsZXMvQG5lYXItanMvc2lnbmVycy9saWIvY29tbW9uanMvaW5fbWVtb3J5X3NpZ25lci5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCLGlCQUFpQixtQkFBTyxDQUFDLDZIQUFpQjtBQUMxQyxvQkFBb0IsbUJBQU8sQ0FBQyxzSUFBb0I7QUFDaEQsaUJBQWlCLG1CQUFPLENBQUMsaUhBQXNCO0FBQy9DLGlCQUFpQixtQkFBTyxDQUFDLDZIQUFjO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixvQkFBb0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsV0FBVyxlQUFlLFVBQVU7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsY0FBYztBQUMvQztBQUNBO0FBQ0Esc0JBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGFja2F0aG9uLW5lYXItcmVkYWN0ZWQvLi9ub2RlX21vZHVsZXMvLnBucG0vQG5lYXItanMrc2lnbmVyc0AwLjIuMS9ub2RlX21vZHVsZXMvQG5lYXItanMvc2lnbmVycy9saWIvY29tbW9uanMvaW5fbWVtb3J5X3NpZ25lci5janM/ZWY3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW5NZW1vcnlTaWduZXIgPSB2b2lkIDA7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9jcnlwdG9cIik7XG5jb25zdCBrZXlzdG9yZXNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9rZXlzdG9yZXNcIik7XG5jb25zdCBzaGEyNTZfMSA9IHJlcXVpcmUoXCJAbm9ibGUvaGFzaGVzL3NoYTI1NlwiKTtcbmNvbnN0IHNpZ25lcl8xID0gcmVxdWlyZShcIi4vc2lnbmVyLmNqc1wiKTtcbi8qKlxuICogU2lnbnMgdXNpbmcgaW4gbWVtb3J5IGtleSBzdG9yZS5cbiAqL1xuY2xhc3MgSW5NZW1vcnlTaWduZXIgZXh0ZW5kcyBzaWduZXJfMS5TaWduZXIge1xuICAgIGtleVN0b3JlO1xuICAgIGNvbnN0cnVjdG9yKGtleVN0b3JlKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMua2V5U3RvcmUgPSBrZXlTdG9yZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHNpbmdsZSBhY2NvdW50IFNpZ25lciBpbnN0YW5jZSB3aXRoIGFjY291bnQsIG5ldHdvcmsgYW5kIGtleVBhaXIgcHJvdmlkZWQuXG4gICAgICpcbiAgICAgKiBJbnRlbmRlZCB0byBiZSB1c2VmdWwgZm9yIHRlbXBvcmFyeSBrZXlzIChlLmcuIGNsYWltaW5nIGEgTGlua2Ryb3ApLlxuICAgICAqXG4gICAgICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gICAgICogQHBhcmFtIGFjY291bnRJZCBUaGUgTkVBUiBhY2NvdW50IHRvIGFzc2lnbiB0aGUga2V5IHBhaXIgdG9cbiAgICAgKiBAcGFyYW0ga2V5UGFpciBUaGUga2V5UGFpciB0byB1c2UgZm9yIHNpZ25pbmdcbiAgICAgKi9cbiAgICBzdGF0aWMgYXN5bmMgZnJvbUtleVBhaXIobmV0d29ya0lkLCBhY2NvdW50SWQsIGtleVBhaXIpIHtcbiAgICAgICAgY29uc3Qga2V5U3RvcmUgPSBuZXcga2V5c3RvcmVzXzEuSW5NZW1vcnlLZXlTdG9yZSgpO1xuICAgICAgICBhd2FpdCBrZXlTdG9yZS5zZXRLZXkobmV0d29ya0lkLCBhY2NvdW50SWQsIGtleVBhaXIpO1xuICAgICAgICByZXR1cm4gbmV3IEluTWVtb3J5U2lnbmVyKGtleVN0b3JlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHB1YmxpYyBrZXkgZm9yIHRoZSBhY2NvdW50IGdpdmVuXG4gICAgICogQHBhcmFtIGFjY291bnRJZCBUaGUgTkVBUiBhY2NvdW50IHRvIGFzc2lnbiBhIHB1YmxpYyBrZXkgdG9cbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxQdWJsaWNLZXk+fVxuICAgICAqL1xuICAgIGFzeW5jIGNyZWF0ZUtleShhY2NvdW50SWQsIG5ldHdvcmtJZCwga2V5VHlwZSkge1xuICAgICAgICBjb25zdCBrZXlQYWlyID0ga2V5VHlwZSA9PT0gY3J5cHRvXzEuS2V5VHlwZS5TRUNQMjU2SzEgPyBjcnlwdG9fMS5LZXlQYWlyLmZyb21SYW5kb20oJ3NlY3AyNTZrMScpIDogY3J5cHRvXzEuS2V5UGFpci5mcm9tUmFuZG9tKCdlZDI1NTE5Jyk7XG4gICAgICAgIGF3YWl0IHRoaXMua2V5U3RvcmUuc2V0S2V5KG5ldHdvcmtJZCwgYWNjb3VudElkLCBrZXlQYWlyKTtcbiAgICAgICAgcmV0dXJuIGtleVBhaXIuZ2V0UHVibGljS2V5KCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIGV4aXN0aW5nIHB1YmxpYyBrZXkgZm9yIGEgZ2l2ZW4gYWNjb3VudFxuICAgICAqIEBwYXJhbSBhY2NvdW50SWQgVGhlIE5FQVIgYWNjb3VudCB0byBhc3NpZ24gYSBwdWJsaWMga2V5IHRvXG4gICAgICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gICAgICogQHJldHVybnMge1Byb21pc2U8UHVibGljS2V5Pn0gUmV0dXJucyB0aGUgcHVibGljIGtleSBvciBudWxsIGlmIG5vdCBmb3VuZFxuICAgICAqL1xuICAgIGFzeW5jIGdldFB1YmxpY0tleShhY2NvdW50SWQsIG5ldHdvcmtJZCkge1xuICAgICAgICBjb25zdCBrZXlQYWlyID0gYXdhaXQgdGhpcy5rZXlTdG9yZS5nZXRLZXkobmV0d29ya0lkLCBhY2NvdW50SWQpO1xuICAgICAgICBpZiAoa2V5UGFpciA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGtleVBhaXIuZ2V0UHVibGljS2V5KCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBwYXJhbSBtZXNzYWdlIEEgbWVzc2FnZSB0byBiZSBzaWduZWQsIHR5cGljYWxseSBhIHNlcmlhbGl6ZWQgdHJhbnNhY3Rpb25cbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIHRoZSBORUFSIGFjY291bnQgc2lnbmluZyB0aGUgbWVzc2FnZVxuICAgICAqIEBwYXJhbSBuZXR3b3JrSWQgVGhlIHRhcmdldGVkIG5ldHdvcmsuIChleC4gZGVmYXVsdCwgYmV0YW5ldCwgZXRj4oCmKVxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPFNpZ25hdHVyZT59XG4gICAgICovXG4gICAgYXN5bmMgc2lnbk1lc3NhZ2UobWVzc2FnZSwgYWNjb3VudElkLCBuZXR3b3JrSWQpIHtcbiAgICAgICAgY29uc3QgaGFzaCA9IG5ldyBVaW50OEFycmF5KCgwLCBzaGEyNTZfMS5zaGEyNTYpKG1lc3NhZ2UpKTtcbiAgICAgICAgaWYgKCFhY2NvdW50SWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW5NZW1vcnlTaWduZXIgcmVxdWlyZXMgcHJvdmlkZWQgYWNjb3VudCBpZCcpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGtleVBhaXIgPSBhd2FpdCB0aGlzLmtleVN0b3JlLmdldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCk7XG4gICAgICAgIGlmIChrZXlQYWlyID09PSBudWxsKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEtleSBmb3IgJHthY2NvdW50SWR9IG5vdCBmb3VuZCBpbiAke25ldHdvcmtJZH1gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ga2V5UGFpci5zaWduKGhhc2gpO1xuICAgIH1cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGBJbk1lbW9yeVNpZ25lcigke3RoaXMua2V5U3RvcmV9KWA7XG4gICAgfVxufVxuZXhwb3J0cy5Jbk1lbW9yeVNpZ25lciA9IEluTWVtb3J5U2lnbmVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@near-js+signers@0.2.1/node_modules/@near-js/signers/lib/commonjs/in_memory_signer.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@near-js+signers@0.2.1/node_modules/@near-js/signers/lib/commonjs/index.cjs":
/*!********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@near-js+signers@0.2.1/node_modules/@near-js/signers/lib/commonjs/index.cjs ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Signer = exports.InMemorySigner = void 0;\nvar in_memory_signer_1 = __webpack_require__(/*! ./in_memory_signer.cjs */ \"(ssr)/./node_modules/.pnpm/@near-js+signers@0.2.1/node_modules/@near-js/signers/lib/commonjs/in_memory_signer.cjs\");\nObject.defineProperty(exports, \"InMemorySigner\", ({ enumerable: true, get: function () { return in_memory_signer_1.InMemorySigner; } }));\nvar signer_1 = __webpack_require__(/*! ./signer.cjs */ \"(ssr)/./node_modules/.pnpm/@near-js+signers@0.2.1/node_modules/@near-js/signers/lib/commonjs/signer.cjs\");\nObject.defineProperty(exports, \"Signer\", ({ enumerable: true, get: function () { return signer_1.Signer; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG5lYXItanMrc2lnbmVyc0AwLjIuMS9ub2RlX21vZHVsZXMvQG5lYXItanMvc2lnbmVycy9saWIvY29tbW9uanMvaW5kZXguY2pzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWMsR0FBRyxzQkFBc0I7QUFDdkMseUJBQXlCLG1CQUFPLENBQUMsaUpBQXdCO0FBQ3pELGtEQUFpRCxFQUFFLHFDQUFxQyw2Q0FBNkMsRUFBQztBQUN0SSxlQUFlLG1CQUFPLENBQUMsNkhBQWM7QUFDckMsMENBQXlDLEVBQUUscUNBQXFDLDJCQUEyQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGFja2F0aG9uLW5lYXItcmVkYWN0ZWQvLi9ub2RlX21vZHVsZXMvLnBucG0vQG5lYXItanMrc2lnbmVyc0AwLjIuMS9ub2RlX21vZHVsZXMvQG5lYXItanMvc2lnbmVycy9saWIvY29tbW9uanMvaW5kZXguY2pzPzJiNDIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNpZ25lciA9IGV4cG9ydHMuSW5NZW1vcnlTaWduZXIgPSB2b2lkIDA7XG52YXIgaW5fbWVtb3J5X3NpZ25lcl8xID0gcmVxdWlyZShcIi4vaW5fbWVtb3J5X3NpZ25lci5janNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJJbk1lbW9yeVNpZ25lclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW5fbWVtb3J5X3NpZ25lcl8xLkluTWVtb3J5U2lnbmVyOyB9IH0pO1xudmFyIHNpZ25lcl8xID0gcmVxdWlyZShcIi4vc2lnbmVyLmNqc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlNpZ25lclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2lnbmVyXzEuU2lnbmVyOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@near-js+signers@0.2.1/node_modules/@near-js/signers/lib/commonjs/index.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@near-js+signers@0.2.1/node_modules/@near-js/signers/lib/commonjs/signer.cjs":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@near-js+signers@0.2.1/node_modules/@near-js/signers/lib/commonjs/signer.cjs ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Signer = void 0;\n/**\n * General signing interface, can be used for in memory signing, RPC singing, external wallet, HSM, etc.\n */\nclass Signer {\n}\nexports.Signer = Signer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG5lYXItanMrc2lnbmVyc0AwLjIuMS9ub2RlX21vZHVsZXMvQG5lYXItanMvc2lnbmVycy9saWIvY29tbW9uanMvc2lnbmVyLmNqcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oYWNrYXRob24tbmVhci1yZWRhY3RlZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AbmVhci1qcytzaWduZXJzQDAuMi4xL25vZGVfbW9kdWxlcy9AbmVhci1qcy9zaWduZXJzL2xpYi9jb21tb25qcy9zaWduZXIuY2pzP2JiYzYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNpZ25lciA9IHZvaWQgMDtcbi8qKlxuICogR2VuZXJhbCBzaWduaW5nIGludGVyZmFjZSwgY2FuIGJlIHVzZWQgZm9yIGluIG1lbW9yeSBzaWduaW5nLCBSUEMgc2luZ2luZywgZXh0ZXJuYWwgd2FsbGV0LCBIU00sIGV0Yy5cbiAqL1xuY2xhc3MgU2lnbmVyIHtcbn1cbmV4cG9ydHMuU2lnbmVyID0gU2lnbmVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@near-js+signers@0.2.1/node_modules/@near-js/signers/lib/commonjs/signer.cjs\n");

/***/ })

};
;