"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@near-js+keystores-browser@0.2.1";
exports.ids = ["vendor-chunks/@near-js+keystores-browser@0.2.1"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@near-js+keystores-browser@0.2.1/node_modules/@near-js/keystores-browser/lib/commonjs/browser_local_storage_key_store.cjs":
/*!******************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@near-js+keystores-browser@0.2.1/node_modules/@near-js/keystores-browser/lib/commonjs/browser_local_storage_key_store.cjs ***!
  \******************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BrowserLocalStorageKeyStore = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/.pnpm/@near-js+crypto@1.4.1/node_modules/@near-js/crypto/lib/commonjs/index.cjs\");\nconst keystores_1 = __webpack_require__(/*! @near-js/keystores */ \"(ssr)/./node_modules/.pnpm/@near-js+keystores@0.2.1/node_modules/@near-js/keystores/lib/commonjs/index.cjs\");\nconst LOCAL_STORAGE_KEY_PREFIX = 'near-api-js:keystore:';\n/**\n * This class is used to store keys in the browsers local storage.\n *\n * @see [https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store](https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store)\n * @example\n * ```js\n * import { connect, keyStores } from 'near-api-js';\n *\n * const keyStore = new keyStores.BrowserLocalStorageKeyStore();\n * const config = {\n *   keyStore, // instance of BrowserLocalStorageKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass BrowserLocalStorageKeyStore extends keystores_1.KeyStore {\n    /** @hidden */\n    localStorage;\n    /** @hidden */\n    prefix;\n    /**\n     * @param localStorage defaults to window.localStorage\n     * @param prefix defaults to `near-api-js:keystore:`\n     */\n    constructor(localStorage = window.localStorage, prefix = LOCAL_STORAGE_KEY_PREFIX) {\n        super();\n        this.localStorage = localStorage;\n        this.prefix = prefix;\n    }\n    /**\n     * Stores a {@link KeyPair} in local storage.\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    async setKey(networkId, accountId, keyPair) {\n        this.localStorage.setItem(this.storageKeyForSecretKey(networkId, accountId), keyPair.toString());\n    }\n    /**\n     * Gets a {@link KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    async getKey(networkId, accountId) {\n        const value = this.localStorage.getItem(this.storageKeyForSecretKey(networkId, accountId));\n        if (!value) {\n            return null;\n        }\n        return crypto_1.KeyPair.fromString(value);\n    }\n    /**\n     * Removes a {@link KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    async removeKey(networkId, accountId) {\n        this.localStorage.removeItem(this.storageKeyForSecretKey(networkId, accountId));\n    }\n    /**\n     * Removes all items that start with `prefix` from local storage\n     */\n    async clear() {\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                this.localStorage.removeItem(key);\n            }\n        }\n    }\n    /**\n     * Get the network(s) from local storage\n     * @returns {Promise<string[]>}\n     */\n    async getNetworks() {\n        const result = new Set();\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                const parts = key.substring(this.prefix.length).split(':');\n                result.add(parts[1]);\n            }\n        }\n        return Array.from(result.values());\n    }\n    /**\n     * Gets the account(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    async getAccounts(networkId) {\n        const result = new Array();\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                const parts = key.substring(this.prefix.length).split(':');\n                if (parts[1] === networkId) {\n                    result.push(parts[0]);\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * @hidden\n     * Helper function to retrieve a local storage key\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the storage key that's sought\n     * @returns {string} An example might be: `near-api-js:keystore:near-friend:default`\n     */\n    storageKeyForSecretKey(networkId, accountId) {\n        return `${this.prefix}${accountId}:${networkId}`;\n    }\n    /** @hidden */\n    *storageKeys() {\n        for (let i = 0; i < this.localStorage.length; i++) {\n            yield this.localStorage.key(i);\n        }\n    }\n}\nexports.BrowserLocalStorageKeyStore = BrowserLocalStorageKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@near-js+keystores-browser@0.2.1/node_modules/@near-js/keystores-browser/lib/commonjs/browser_local_storage_key_store.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@near-js+keystores-browser@0.2.1/node_modules/@near-js/keystores-browser/lib/commonjs/index.cjs":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@near-js+keystores-browser@0.2.1/node_modules/@near-js/keystores-browser/lib/commonjs/index.cjs ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultiContractBrowserLocalStorageKeyStore = exports.BrowserLocalStorageKeyStore = void 0;\nvar browser_local_storage_key_store_1 = __webpack_require__(/*! ./browser_local_storage_key_store.cjs */ \"(ssr)/./node_modules/.pnpm/@near-js+keystores-browser@0.2.1/node_modules/@near-js/keystores-browser/lib/commonjs/browser_local_storage_key_store.cjs\");\nObject.defineProperty(exports, \"BrowserLocalStorageKeyStore\", ({ enumerable: true, get: function () { return browser_local_storage_key_store_1.BrowserLocalStorageKeyStore; } }));\nvar multi_contract_browser_local_storage_key_store_1 = __webpack_require__(/*! ./multi_contract_browser_local_storage_key_store.cjs */ \"(ssr)/./node_modules/.pnpm/@near-js+keystores-browser@0.2.1/node_modules/@near-js/keystores-browser/lib/commonjs/multi_contract_browser_local_storage_key_store.cjs\");\nObject.defineProperty(exports, \"MultiContractBrowserLocalStorageKeyStore\", ({ enumerable: true, get: function () { return multi_contract_browser_local_storage_key_store_1.MultiContractBrowserLocalStorageKeyStore; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG5lYXItanMra2V5c3RvcmVzLWJyb3dzZXJAMC4yLjEvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy1icm93c2VyL2xpYi9jb21tb25qcy9pbmRleC5janMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0RBQWdELEdBQUcsbUNBQW1DO0FBQ3RGLHdDQUF3QyxtQkFBTyxDQUFDLG1NQUF1QztBQUN2RiwrREFBOEQsRUFBRSxxQ0FBcUMseUVBQXlFLEVBQUM7QUFDL0ssdURBQXVELG1CQUFPLENBQUMsaU9BQXNEO0FBQ3JILDRFQUEyRSxFQUFFLHFDQUFxQyxxR0FBcUcsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hhY2thdGhvbi1uZWFyLXJlZGFjdGVkLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BuZWFyLWpzK2tleXN0b3Jlcy1icm93c2VyQDAuMi4xL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9saWIvY29tbW9uanMvaW5kZXguY2pzP2U5ZTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk11bHRpQ29udHJhY3RCcm93c2VyTG9jYWxTdG9yYWdlS2V5U3RvcmUgPSBleHBvcnRzLkJyb3dzZXJMb2NhbFN0b3JhZ2VLZXlTdG9yZSA9IHZvaWQgMDtcbnZhciBicm93c2VyX2xvY2FsX3N0b3JhZ2Vfa2V5X3N0b3JlXzEgPSByZXF1aXJlKFwiLi9icm93c2VyX2xvY2FsX3N0b3JhZ2Vfa2V5X3N0b3JlLmNqc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkJyb3dzZXJMb2NhbFN0b3JhZ2VLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYnJvd3Nlcl9sb2NhbF9zdG9yYWdlX2tleV9zdG9yZV8xLkJyb3dzZXJMb2NhbFN0b3JhZ2VLZXlTdG9yZTsgfSB9KTtcbnZhciBtdWx0aV9jb250cmFjdF9icm93c2VyX2xvY2FsX3N0b3JhZ2Vfa2V5X3N0b3JlXzEgPSByZXF1aXJlKFwiLi9tdWx0aV9jb250cmFjdF9icm93c2VyX2xvY2FsX3N0b3JhZ2Vfa2V5X3N0b3JlLmNqc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk11bHRpQ29udHJhY3RCcm93c2VyTG9jYWxTdG9yYWdlS2V5U3RvcmVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG11bHRpX2NvbnRyYWN0X2Jyb3dzZXJfbG9jYWxfc3RvcmFnZV9rZXlfc3RvcmVfMS5NdWx0aUNvbnRyYWN0QnJvd3NlckxvY2FsU3RvcmFnZUtleVN0b3JlOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@near-js+keystores-browser@0.2.1/node_modules/@near-js/keystores-browser/lib/commonjs/index.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@near-js+keystores-browser@0.2.1/node_modules/@near-js/keystores-browser/lib/commonjs/multi_contract_browser_local_storage_key_store.cjs":
/*!*********************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@near-js+keystores-browser@0.2.1/node_modules/@near-js/keystores-browser/lib/commonjs/multi_contract_browser_local_storage_key_store.cjs ***!
  \*********************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultiContractBrowserLocalStorageKeyStore = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"(ssr)/./node_modules/.pnpm/@near-js+crypto@1.4.1/node_modules/@near-js/crypto/lib/commonjs/index.cjs\");\nconst keystores_1 = __webpack_require__(/*! @near-js/keystores */ \"(ssr)/./node_modules/.pnpm/@near-js+keystores@0.2.1/node_modules/@near-js/keystores/lib/commonjs/index.cjs\");\nconst LOCAL_STORAGE_KEY_PREFIX = 'near-api-js:keystore:';\n/**\n * This class is used to store keys in the browsers local storage.\n *\n * @see [https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store](https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store)\n * @example\n * ```js\n * import { connect, keyStores } from 'near-api-js';\n *\n * const keyStore = new keyStores.MultiContractBrowserLocalStorageKeyStore();\n * const config = {\n *   keyStore, // instance of MultiContractBrowserLocalStorageKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass MultiContractBrowserLocalStorageKeyStore extends keystores_1.MultiContractKeyStore {\n    /** @hidden */\n    localStorage;\n    /** @hidden */\n    prefix;\n    /**\n     * @param localStorage defaults to window.localStorage\n     * @param prefix defaults to `near-api-js:keystore:`\n     */\n    constructor(localStorage = window.localStorage, prefix = LOCAL_STORAGE_KEY_PREFIX) {\n        super();\n        this.localStorage = localStorage;\n        this.prefix = prefix || LOCAL_STORAGE_KEY_PREFIX;\n    }\n    /**\n     * Stores a {@link utils/key_pair!KeyPair} in local storage.\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     * @param contractId The contract to store in local storage\n     */\n    async setKey(networkId, accountId, keyPair, contractId) {\n        this.localStorage.setItem(this.storageKeyForSecretKey(networkId, accountId, contractId), keyPair.toString());\n    }\n    /**\n     * Gets a {@link utils/key_pair!KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param contractId The NEAR contract tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    async getKey(networkId, accountId, contractId) {\n        const value = this.localStorage.getItem(this.storageKeyForSecretKey(networkId, accountId, contractId));\n        if (!value) {\n            return null;\n        }\n        return crypto_1.KeyPair.fromString(value);\n    }\n    /**\n     * Removes a {@link utils/key_pair!KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param contractId The NEAR contract tied to the key pair\n     */\n    async removeKey(networkId, accountId, contractId) {\n        this.localStorage.removeItem(this.storageKeyForSecretKey(networkId, accountId, contractId));\n    }\n    /**\n     * Removes all items that start with `prefix` from local storage\n     */\n    async clear() {\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                this.localStorage.removeItem(key);\n            }\n        }\n    }\n    /**\n     * Get the network(s) from local storage\n     * @returns {Promise<string[]>}\n     */\n    async getNetworks() {\n        const result = new Set();\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                const parts = key.substring(this.prefix.length).split(':');\n                result.add(parts[1]);\n            }\n        }\n        return Array.from(result.values());\n    }\n    /**\n     * Gets the account(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    async getAccounts(networkId) {\n        const result = [];\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                const parts = key.substring(this.prefix.length).split(':');\n                if (parts[1] === networkId) {\n                    result.push(parts[0]);\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Gets the contract(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The targeted account.\n     */\n    async getContracts(networkId, accountId) {\n        const result = [];\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                const parts = key.substring(this.prefix.length).split(':');\n                if (parts[1] === networkId && parts[0] === accountId) {\n                    result.push(parts[2]);\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * @hidden\n     * Helper function to retrieve a local storage key\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the storage keythat's sought\n     * @param contractId The NEAR contract tied to the storage keythat's sought\n     * @returns {string} An example might be: `near-api-js:keystore:near-friend:default`\n     */\n    storageKeyForSecretKey(networkId, accountId, contractId) {\n        return `${this.prefix}${accountId}:${networkId}:${contractId}`;\n    }\n    /** @hidden */\n    *storageKeys() {\n        for (let i = 0; i < this.localStorage.length; i++) {\n            yield this.localStorage.key(i);\n        }\n    }\n}\nexports.MultiContractBrowserLocalStorageKeyStore = MultiContractBrowserLocalStorageKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@near-js+keystores-browser@0.2.1/node_modules/@near-js/keystores-browser/lib/commonjs/multi_contract_browser_local_storage_key_store.cjs\n");

/***/ })

};
;